apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: argocd-o11y-demo
spec:
  replicas: 5
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-o11y-demo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-o11y-demo
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
    spec:
      containers:
        - name: argocd-o11y-demo
          image: sarabala1979/argocd-o11y-demo:v2
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
  strategy:
    canary:
      steps:
        - setWeight: 20
        # The following pause step will pause the rollout indefinitely until manually resumed.
        # Rollouts can be manually resumed by running `kubectl argo rollouts promote ROLLOUT`
        - pause: {}
        - setWeight: 40
        - pause: {duration: 40s}
        - setWeight: 60
        - pause: {duration: 20s}
        - setWeight: 80
        - pause: {duration: 20s}
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  labels:
#    app.kubernetes.io/name: argocd-o11y-demo
#  name: argocd-o11y-demo
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app.kubernetes.io/name: argocd-o11y-demo
#  template:
#    metadata:
#      labels:
#        app.kubernetes.io/name: argocd-o11y-demo
#      annotations:
#        prometheus.io/scrape: 'true'
#        prometheus.io/port: '8080'
#    spec:
#      metadata:
#      containers:
#      - name: prometheus-example-app
#        image: sarabala1979/argocd-o11y-demo:ged
#        ports:
#        - name: web
#          containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: argocd-o11y-demo
  name: argocd-o11y-demo
spec:
  ports:
    - name: metrics
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: argocd-o11y-demo